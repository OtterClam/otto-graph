specVersion: 0.0.4
schema:
  file: ./schema.graphql
features:
  - grafting
dataSources:
  - kind: ethereum/contract
    name: Otto
    network: ${SUBGRAPH_NETWORK}
    source:
      address: '${SUBGRAPH_OTTO_ADDRESS}'
      abi: OttoV4Contract
      startBlock: ${SUBGRAPH_OTTO_STARTBLOCK}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Otto
      abis:
        - name: OttoContract
          file: ./abis/Otto.json
        - name: OttoV2Contract
          file: ./abis/OttoV2.json
        - name: OttoV3Contract
          file: ./abis/OttoV3.json
        - name: OttoV4Contract
          file: ./abis/OttoV4.json
        - name: OttoItemContract
          file: ./abis/OttoItem.json
        # --------------------
      eventHandlers:
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: handleTransfer
        - event: OpenPortal(indexed address,indexed uint256,bool)
          handler: handleOpen
        - event: SummonOtto(indexed address,indexed uint256,bool)
          handler: handleSummon
        - event: CandidatesCorrected(indexed uint256,uint256[])
          handler: handleCandidatesCorrected
        - event: TraitsChanged(indexed uint256,uint16[16])
          handler: handleTraitsChanged
        - event: ItemEquipped(indexed uint256,indexed uint256)
          handler: handleItemEquipped
        - event: ItemTookOff(indexed uint256,indexed uint256)
          handler: handleItemTookOff
        - event: EpochBoostsChanged(indexed uint256,indexed uint32,int16[9])
          handler: handleEpochBoostChanged
        - event: BaseAttributesChanged(indexed uint256,int16[8])
          handler: handleBaseAttributesChanged
        - event: ExpIncreased(indexed uint256,uint32,uint32)
          handler: handleExpIncreased
        - event: LevelUp(indexed uint256,uint32,uint32,uint32,uint32,uint32,uint32,uint32)
          handler: handleLevelUp
        - event: ApIncreased(indexed uint256,uint32,uint32)
          handler: handleApIncreased
      file: ./src/Otto.ts

  - kind: ethereum/contract
    name: OttoItem
    network: ${SUBGRAPH_NETWORK}
    source:
      address: '${SUBGRAPH_OTTO_ITEM_ADDRESS}'
      abi: OttoItemContract
      startBlock: ${SUBGRAPH_ITEM_START_BLOCK}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Item
      abis:
        - name: OttoItemContract
          file: ./abis/OttoItem.json
        # --------------------
      eventHandlers:
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransfer
        - event: TransferBatch(indexed address,indexed address,indexed address,uint256[],uint256[])
          handler: handleTransferBatch

      file: ./src/OttoItem.ts

  - kind: ethereum/contract
    name: OttopiaStore
    network: ${SUBGRAPH_NETWORK}
    source:
      address: '${SUBGRAPH_OTTOPIA_STORE_ADDRESS}'
      abi: OttopiaStoreContract
      startBlock: ${SUBGRAPH_OTTOPIA_STORE_START_BLOCK}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - OttoProduct
      abis:
        - name: OttopiaStoreContract
          file: ./abis/OttopiaStore.json
        # --------------------
      eventHandlers:
        - event: CreateProduct(indexed uint256)
          handler: handleCreate
        - event: UpdateProduct(indexed uint256)
          handler: handleUpdate
        - event: DeleteProduct(indexed uint256)
          handler: handleDelete
      file: ./src/OttopiaStore.ts

  - kind: ethereum/contract
    name: Adventure
    network: ${SUBGRAPH_NETWORK}
    source:
      address: '${SUBGRAPH_ADVENTURE_ADDRESS}'
      abi: AdventureContract
      startBlock: ${SUBGRAPH_ADVENTURE_START_BLOCK}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - AdventurePass
      abis:
        - name: AdventureContract
          file: ./abis/Adventure.json
        # --------------------
      eventHandlers:
        - event: Departure(indexed uint256,indexed uint256)
          handler: handleDeparture
        - event: Finish(indexed uint256,indexed uint256,bool)
          handler: handleFinish
        - event: Revive(indexed uint256,indexed uint256)
          handler: handleRevive
        - event: PassUpdated(indexed uint256,indexed uint256)
          handler: handlePassUpdated
        - event: RestingUntilUpdated(indexed uint256,uint256,uint256)
          handler: handleRestingUntilUpdated
      file: ./src/Adventure.ts
